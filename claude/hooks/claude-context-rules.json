{
  "description": "Configuration rules for Claude Context Updater",
  "version": "1.0.0",
  
  "directoryRules": {
    "minFilesForClaudeMd": 3,
    "keyFilesRequiringClaudeMd": [
      "package.json",
      "Cargo.toml",
      "pyproject.toml",
      "index.ts",
      "index.js",
      "main.rs",
      "main.py"
    ],
    "excludeDirectories": [
      "node_modules",
      ".git",
      "dist",
      "build",
      "coverage",
      ".turbo",
      ".next",
      "out",
      "__pycache__"
    ]
  },
  
  "updateTriggers": {
    "package.json": {
      "sections": ["commands", "dependencies", "technology-stack"],
      "description": "Updates when package.json changes"
    },
    "*.config.*": {
      "sections": ["configuration"],
      "description": "Updates when configuration files change"
    },
    ".env*": {
      "sections": ["configuration", "environment-variables"],
      "description": "Updates when environment files change"
    },
    "migrations/*": {
      "sections": ["database", "architecture"],
      "description": "Updates when database migrations are added"
    },
    "*.test.*": {
      "sections": ["testing", "commands"],
      "description": "Updates when test files are added"
    },
    "api/*": {
      "sections": ["api-endpoints", "architecture"],
      "description": "Updates when API files change"
    },
    "routes/*": {
      "sections": ["routing", "api-endpoints"],
      "description": "Updates when route files change"
    }
  },
  
  "templateSections": {
    "header": {
      "required": true,
      "template": "# {directory} - CLAUDE.md\n\nThis file provides guidance to Claude Code (claude.ai/code) when working with code in this directory.\n"
    },
    "overview": {
      "required": true,
      "template": "## Overview\n{description}\n"
    },
    "technology-stack": {
      "required": false,
      "applicableFor": ["package.json", "Cargo.toml", "pyproject.toml"],
      "template": "## Technology Stack\n{stack_list}\n"
    },
    "directory-structure": {
      "required": true,
      "template": "## Directory Structure\n{structure}\n"
    },
    "commands": {
      "required": false,
      "applicableFor": ["package.json"],
      "template": "## Commands\n{commands_list}\n"
    },
    "configuration": {
      "required": false,
      "template": "## Configuration\n{config_details}\n"
    },
    "api-endpoints": {
      "required": false,
      "applicableFor": ["api", "routes", "handlers"],
      "template": "## API Endpoints\n{endpoints_list}\n"
    },
    "database": {
      "required": false,
      "applicableFor": ["migrations", "schema", "models"],
      "template": "## Database\n{database_details}\n"
    },
    "testing": {
      "required": false,
      "template": "## Testing\n{testing_approach}\n"
    },
    "architecture": {
      "required": false,
      "template": "## Architecture\n{architecture_details}\n"
    },
    "best-practices": {
      "required": true,
      "template": "## Best Practices\n- Follow the project's coding standards\n- Keep functions under 25 lines\n- Maintain clear separation of concerns\n{additional_practices}\n"
    }
  },
  
  "contentPatterns": {
    "detectReactComponent": {
      "pattern": "export.*(?:function|const).*(?:FC|React\\.FC|Component)",
      "addToSection": "architecture",
      "suggestion": "Document React component patterns"
    },
    "detectAPIHandler": {
      "pattern": "(?:app|router)\\.(?:get|post|put|delete|patch)",
      "addToSection": "api-endpoints",
      "suggestion": "Document API endpoints"
    },
    "detectDatabaseModel": {
      "pattern": "(?:model|schema|entity).*(?:define|create|class)",
      "addToSection": "database",
      "suggestion": "Document database models"
    },
    "detectConfiguration": {
      "pattern": "(?:config|settings|env).*(?:export|module\\.exports)",
      "addToSection": "configuration",
      "suggestion": "Document configuration options"
    }
  },
  
  "preservationRules": {
    "alwaysPreserve": [
      "custom-sections",
      "user-added-content",
      "examples",
      "warnings",
      "important-notes"
    ],
    "updateMarkers": {
      "start": "<!-- CLAUDE-UPDATER-START -->",
      "end": "<!-- CLAUDE-UPDATER-END -->"
    }
  },
  
  "notificationSettings": {
    "notifyOnNewClaudeMd": true,
    "notifyOnUpdates": true,
    "summaryInTerminal": true,
    "createSummaryFile": true
  }
}