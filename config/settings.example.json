{
  "_comment_logging": "Logging is ON by default. Add a 'logging' section only if you want to customize or disable it",
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "pattern": "^(npm\\s+(install|i)|yarn\\s+add)\\s+",
        "hooks": [
          {
            "type": "command",
            "command": "./claude/hooks/check-package-age.sh"
          }
        ]
      },
      {
        "matcher": "Bash",
        "pattern": "^git\\s+commit",
        "hooks": [
          {
            "type": "command",
            "command": "./claude/hooks/pre-commit-check.sh"
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "./claude/hooks/code-quality-primer.sh"
          }
        ]
      },
      {
        "matcher": "TodoWrite",
        "pattern": "\"status\":\\s*\"completed\"",
        "hooks": [
          {
            "type": "command",
            "command": "./claude/hooks/pre-completion-check.sh"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "./claude/hooks/code-quality-validator.sh"
          },
          {
            "type": "command",
            "command": "./claude/hooks/post-write.sh"
          }
        ]
      },
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "./claude/hooks/task-completion-notify.sh"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "./claude/hooks/stop-validation.sh"
          },
          {
            "type": "command",
            "command": "./claude/hooks/task-completion-notify.sh"
          }
        ]
      }
    ]
  },
  "_comment": "Copy this file to ./claude/settings.json and run the setup script: ./claude/setup-hooks.sh",
  "_logging_levels": ["DEBUG", "INFO", "WARN", "ERROR"],
  "_logging_info": {
    "enabled": "Enable or disable logging (true/false)",
    "level": "Minimum log level to record (DEBUG shows all)",
    "path": "Path to log file (use ~ for home directory)",
    "maxSize": "Maximum log file size in bytes before rotation (10MB default)",
    "retention": "Number of days to keep old log files"
  }
}